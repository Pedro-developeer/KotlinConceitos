1. Imprima os números pares de 100 a 200.

Resposta:
fun evenNumbers() {
   for (i in 100..200 step 2) {
       print(" $i ")
   }
}
--------------------------------------

2. Faça uma função capaz de receber uma String e fazer a inversão.
Valor do parâmetro: Teste
Resultado esperado: etseT

Resposta:
fun reverse (str: String) {

   println("String original: $str")
   print("String invertida: ")
   var size = str.length
   while (size > 0) {
       print(str[size - 1])
       size--
   }
   println()
}
Existem também outras maneiras de realizar a resolução deste exercício. 
Isso é uma das coisas mais legais em programação, diferentes maneiras de resolver problemas.
--------------------------------------

3. Faça uma função que receba dois números e mostre todos os números entre eles. 
Além dos dois números, permita receber um terceiro parâmetro que diz se os números serão impressos de forma crescente ou decrescente. 
Considere que sempre o primeiro valor será menor que o segundo.

Ex:
a = 10, b = 15, Crescente -> 10, 11, 12, 13, 14, 15
a = 10, b = 15, Decrescente -> 15, 14, 13, 12, 11, 10

Resposta:
fun printNumbers (n1: Int, n2: Int, ascending: Boolean) {
   if (ascending) {
       var count = n1
       while (count <= n2) {
           print(" $count ")
           count++
       }
   } else {
       var count = n2
       while (count >= n1) {
           print(" $count ")
           count--
       }
   }
}
--------------------------------------

4. Considere uma escada de tamanho n = 4
#
##
###
####

Perceba que o número de linhas é igual o número do tamanho da escada.
Perceba também que a quantidade de # é igual ao tamanho da escada na última linha.
Escreva um algoritmo que seja capaz de receber um valor inteiro N e escrever essa escada de tamanho N.

Resposta:
private fun escreveEscada(n: Int): String {

    var str = ""
    var contador = 1
    var i = 0
    var j = 0

    while (i < n) {
        i++
        while (j < contador) {
            str += "#"
            j++
        }
        contador++
        str += "\n"
        j = 0
    }

    return str
}
--------------------------------------